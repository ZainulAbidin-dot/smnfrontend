{"ast":null,"code":"// import api from \"../utils/api\";\nimport axios from \"../axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\"; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    console.log(res.data);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/posts\", formData);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","console","log","data","type","payload","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["/home/zain/React Projects/V3/V2/client/src/actions/post.js"],"sourcesContent":["// import api from \"../utils/api\";\nimport axios from \"../axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    console.log(res.data);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/posts\", formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}