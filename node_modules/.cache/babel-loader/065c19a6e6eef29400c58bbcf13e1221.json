{"ast":null,"code":"var _jsxFileName = \"/home/zain/React Projects/V3/Web-Project/client/src/components/dashboard/Experience.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteExperience } from \"../../actions/profile\"; // import formatDate from \"../../utils/formatDate\";\n\nimport Moment from \"react-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Experience = _ref => {\n  let {\n    experience,\n    deleteExperience\n  } = _ref;\n  console.log(\"first\");\n  console.log(experience); // const experiences = experience.map((exp) => (\n  //   <tr key={exp._id}>\n  //     <td>{exp.company}</td>\n  //     <td className=\"hide-sm\">{exp.title}</td>\n  //     <td>\n  //       {/* <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{\" \"} */}\n  //       {/* {exp.to ? <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment> : \"Now\"} */}\n  //     </td>\n  //     <td>\n  //       <button\n  //         onClick={() => deleteExperience(exp._id)}\n  //         className=\"btn btn-danger\">\n  //         Delete\n  //       </button>\n  //     </td>\n  //   </tr>\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-2\",\n      children: \"Experience Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hide-sm\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hide-sm\",\n            children: \"Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: \"CaR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Experience;\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteExperience\n})(Experience);\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","Fragment","PropTypes","connect","deleteExperience","Moment","Experience","experience","console","log","propTypes","array","isRequired","func"],"sources":["/home/zain/React Projects/V3/Web-Project/client/src/components/dashboard/Experience.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteExperience } from \"../../actions/profile\";\n// import formatDate from \"../../utils/formatDate\";\nimport Moment from \"react-moment\";\n\nconst Experience = ({ experience, deleteExperience }) => {\n  console.log(\"first\");\n  console.log(experience);\n  // const experiences = experience.map((exp) => (\n  //   <tr key={exp._id}>\n  //     <td>{exp.company}</td>\n  //     <td className=\"hide-sm\">{exp.title}</td>\n  //     <td>\n  //       {/* <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{\" \"} */}\n  //       {/* {exp.to ? <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment> : \"Now\"} */}\n  //     </td>\n  //     <td>\n  //       <button\n  //         onClick={() => deleteExperience(exp._id)}\n  //         className=\"btn btn-danger\">\n  //         Delete\n  //       </button>\n  //     </td>\n  //   </tr>\n  // ));\n\n  return (\n    <Fragment>\n      <h2 className=\"my-2\">Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th />\n          </tr>\n        </thead>\n        {/* <tbody>{experiences}</tbody> */}\n        <tbody>CaR</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,uBAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,UAAU,GAAG,QAAsC;EAAA,IAArC;IAAEC,UAAF;IAAcH;EAAd,CAAqC;EACvDI,OAAO,CAACC,GAAR,CAAY,OAAZ;EACAD,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAFuD,CAGvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAI,SAAS,EAAC,MAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,SAAS,EAAC,OAAjB;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAI,SAAS,EAAC,SAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAI,SAAS,EAAC,SAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAtCD;;KAAMD,U;AAwCNA,UAAU,CAACI,SAAX,GAAuB;EACrBH,UAAU,EAAEL,SAAS,CAACS,KAAV,CAAgBC,UADP;EAErBR,gBAAgB,EAAEF,SAAS,CAACW,IAAV,CAAeD;AAFZ,CAAvB;AAKA,eAAeT,OAAO,CAAC,IAAD,EAAO;EAAEC;AAAF,CAAP,CAAP,CAAoCE,UAApC,CAAf"},"metadata":{},"sourceType":"module"}