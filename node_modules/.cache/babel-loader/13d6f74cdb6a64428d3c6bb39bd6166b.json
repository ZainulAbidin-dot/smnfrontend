{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nfunction postReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n    // case GET_POST:\n    //   return {\n    //     ...state,\n    //     post: payload,\n    //     loading: false,\n    //   };\n    // case ADD_POST:\n    //   return {\n    //     ...state,\n    //     posts: [payload, ...state.posts],\n    //     loading: false,\n    //   };\n    // case DELETE_POST:\n    //   return {\n    //     ...state,\n    //     posts: state.posts.filter((post) => post._id !== payload),\n    //     loading: false,\n    //   };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n    // case UPDATE_LIKES:\n    //   return {\n    //     ...state,\n    //     posts: state.posts.map((post) =>\n    //       post._id === payload.id ? { ...post, likes: payload.likes } : post\n    //     ),\n    //     loading: false,\n    //   };\n    // case ADD_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: { ...state.post, comments: payload },\n    //     loading: false,\n    //   };\n    // case REMOVE_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: {\n    //       ...state.post,\n    //       comments: state.post.comments.filter(\n    //         (comment) => comment._id !== payload\n    //       ),\n    //     },\n    //     loading: false,\n    //   };\n\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;","map":{"version":3,"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","postReducer","state","action","type","payload"],"sources":["/home/zain/React Projects/V3/V2/client/src/reducers/post.js"],"sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nfunction postReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    // case GET_POST:\n    //   return {\n    //     ...state,\n    //     post: payload,\n    //     loading: false,\n    //   };\n    // case ADD_POST:\n    //   return {\n    //     ...state,\n    //     posts: [payload, ...state.posts],\n    //     loading: false,\n    //   };\n    // case DELETE_POST:\n    //   return {\n    //     ...state,\n    //     posts: state.posts.filter((post) => post._id !== payload),\n    //     loading: false,\n    //   };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    // case UPDATE_LIKES:\n    //   return {\n    //     ...state,\n    //     posts: state.posts.map((post) =>\n    //       post._id === payload.id ? { ...post, likes: payload.likes } : post\n    //     ),\n    //     loading: false,\n    //   };\n    // case ADD_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: { ...state.post, comments: payload },\n    //     loading: false,\n    //   };\n    // case REMOVE_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: {\n    //       ...state.post,\n    //       comments: state.post.comments.filter(\n    //         (comment) => comment._id !== payload\n    //       ),\n    //     },\n    //     loading: false,\n    //   };\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;\n"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,IAAI,EAAE,IAFa;EAGnBC,OAAO,EAAE,IAHU;EAInBC,KAAK,EAAE;AAJY,CAArB;;AAOA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;EACjD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAEA,QAAQC,IAAR;IACE,KAAKhB,SAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELL,KAAK,EAAEQ,OAFF;QAGLN,OAAO,EAAE;MAHJ,CAAP;IAKF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA,KAAKV,UAAL;MACE,OAAO,EACL,GAAGa,KADE;QAELF,KAAK,EAAEK,OAFF;QAGLN,OAAO,EAAE;MAHJ,CAAP;IAKF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACA;MACE,OAAOG,KAAP;EAzDJ;AA2DD;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}