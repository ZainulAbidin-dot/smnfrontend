{"ast":null,"code":"var _jsxFileName = \"/home/zain/React Projects/V3/V4/Web-Project/client/src/components/layout/Alert.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = _ref => {\n  let {\n    alerts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: alerts !== null && alerts.length > 0 && alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alert.alertType}`,\n      children: alert.msg\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired // msg: PropTypes.string.isRequired,\n  // alertType: PropTypes.string.isRequired,\n  // id: PropTypes.string.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert // msg: state.alert.msg,\n  // alertType: state.alert.alertType,\n  // id: state.alert.id,\n\n});\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","alertType","msg","id","propTypes","array","isRequired","mapStateToProps","state"],"sources":["/home/zain/React Projects/V3/V4/Web-Project/client/src/components/layout/Alert.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Alert = ({ alerts }) => {\n  return (\n    <div>\n      {alerts !== null &&\n        alerts.length > 0 &&\n        alerts.map((alert) => (\n          <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n  // msg: PropTypes.string.isRequired,\n  // alertType: PropTypes.string.isRequired,\n  // id: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n  // msg: state.alert.msg,\n  // alertType: state.alert.alertType,\n  // id: state.alert.id,\n});\n\nexport default connect(mapStateToProps)(Alert);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC5B,oBACE;IAAA,UACGA,MAAM,KAAK,IAAX,IACCA,MAAM,CAACC,MAAP,GAAgB,CADjB,IAECD,MAAM,CAACE,GAAP,CAAYC,KAAD,iBACT;MAAoB,SAAS,EAAG,eAAcA,KAAK,CAACC,SAAU,EAA9D;MAAA,UACGD,KAAK,CAACE;IADT,GAAUF,KAAK,CAACG,EAAhB;MAAA;MAAA;MAAA;IAAA,QADF;EAHJ;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAZD;;KAAMP,K;AAcNA,KAAK,CAACQ,SAAN,GAAkB;EAChBP,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC,UADR,CAEhB;EACA;EACA;;AAJgB,CAAlB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;EAClCX,MAAM,EAAEW,KAAK,CAACR,KADoB,CAElC;EACA;EACA;;AAJkC,CAAZ,CAAxB;;AAOA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf"},"metadata":{},"sourceType":"module"}